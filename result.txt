declare i32 @getint()
declare void @putint(i32)
declare i32 @getch()
declare void @putch(i32)
declare void @memset(i32*, i32, i32)
declare i32 @getarray(i32*)
declare void @putarray(i32, i32*)
define dso_local i32 @main(){
%1 = alloca [8x i32]
%2 = getelementptr [8 x i32], [8x i32]* %1, i32 0, i32 0
call void @memset(i32* %2, i32 0, i32 32)
%3 = getelementptr [8 x i32], [8x i32]* %1, i32 0, i32 0
store i32 1, i32* %3
%4 = getelementptr [8 x i32], [8x i32]* %1, i32 0, i32 1
store i32 2, i32* %4
%5 = getelementptr [8 x i32], [8x i32]* %1, i32 0, i32 2
store i32 3, i32* %5
%6 = getelementptr [8 x i32], [8x i32]* %1, i32 0, i32 3
store i32 4, i32* %6
%7 = getelementptr [8 x i32], [8x i32]* %1, i32 0, i32 4
store i32 5, i32* %7
%8 = getelementptr [8 x i32], [8x i32]* %1, i32 0, i32 5
store i32 6, i32* %8
%9 = getelementptr [8 x i32], [8x i32]* %1, i32 0, i32 6
store i32 7, i32* %9
%10 = getelementptr [8 x i32], [8x i32]* %1, i32 0, i32 7
store i32 8, i32* %10
%11 = alloca [8x i32]
%12 = getelementptr [8 x i32], [8x i32]* %11, i32 0, i32 0
call void @memset(i32* %12, i32 0, i32 32)
%13 = mul i32 3, 2
%14 = mul i32 0, 1
%15 = add i32 %14, %13
%16 = getelementptr [8 x i32], [8x i32]* @a, i32 0, i32 %15
%17 = getelementptr [8 x i32], [8x i32]* %11, i32 0, i32 0
store i32 1, i32* %17
%18 = getelementptr [8 x i32], [8x i32]* %11, i32 0, i32 1
store i32 2, i32* %18
%19 = getelementptr [8 x i32], [8x i32]* %11, i32 0, i32 2
store i32 3, i32* %19
%20 = getelementptr [8 x i32], [8x i32]* %11, i32 0, i32 3
store i32 0, i32* %20
%21 = getelementptr [8 x i32], [8x i32]* %11, i32 0, i32 4
store i32 5, i32* %21
%22 = getelementptr [8 x i32], [8x i32]* %11, i32 0, i32 5
store i32 0, i32* %22
%23 = getelementptr [8 x i32], [8x i32]* %11, i32 0, i32 6
%24 = load i32, i32* %16
store i32 %24, i32* %23
%25 = getelementptr [8 x i32], [8x i32]* %11, i32 0, i32 7
store i32 8, i32* %25
%26 = alloca [8x i32]
%27 = getelementptr [8 x i32], [8x i32]* %26, i32 0, i32 0
call void @memset(i32* %27, i32 0, i32 32)
%28 = mul i32 2, 2
%29 = mul i32 1, 1
%30 = add i32 %29, %28
%31 = getelementptr [8 x i32], [8x i32]* %11, i32 0, i32 %30
%32 = mul i32 2, 2
%33 = mul i32 1, 1
%34 = add i32 %33, %32
%35 = getelementptr [8 x i32], [8x i32]* %1, i32 0, i32 %34
%36 = getelementptr [8 x i32], [8x i32]* %26, i32 0, i32 0
%37 = load i32, i32* %31
store i32 %37, i32* %36
%38 = getelementptr [8 x i32], [8x i32]* %26, i32 0, i32 1
%39 = load i32, i32* %35
store i32 %39, i32* %38
%40 = getelementptr [8 x i32], [8x i32]* %26, i32 0, i32 2
store i32 3, i32* %40
%41 = getelementptr [8 x i32], [8x i32]* %26, i32 0, i32 3
store i32 4, i32* %41
%42 = getelementptr [8 x i32], [8x i32]* %26, i32 0, i32 4
store i32 5, i32* %42
%43 = getelementptr [8 x i32], [8x i32]* %26, i32 0, i32 5
store i32 6, i32* %43
%44 = getelementptr [8 x i32], [8x i32]* %26, i32 0, i32 6
store i32 7, i32* %44
%45 = getelementptr [8 x i32], [8x i32]* %26, i32 0, i32 7
store i32 8, i32* %45
%46 = mul i32 3, 2
%47 = mul i32 1, 1
%48 = add i32 %47, %46
%49 = mul i32 0, 1
%50 = add i32 %49, %48
%51 = getelementptr [8 x i32], [8x i32]* %26, i32 0, i32 %50
%52 = mul i32 0, 2
%53 = mul i32 0, 1
%54 = add i32 %53, %52
%55 = mul i32 0, 1
%56 = add i32 %55, %54
%57 = getelementptr [8 x i32], [8x i32]* %26, i32 0, i32 %56
%58 = load i32, i32* %51
%59 = load i32, i32* %57
%60 = add i32 %58,%59
%61 = mul i32 0, 2
%62 = mul i32 1, 1
%63 = add i32 %62, %61
%64 = mul i32 0, 1
%65 = add i32 %64, %63
%66 = getelementptr [8 x i32], [8x i32]* %26, i32 0, i32 %65
%67 = load i32, i32* %66
%68 = add i32 %60,%67
%69 = mul i32 3, 2
%70 = mul i32 0, 1
%71 = add i32 %70, %69
%72 = getelementptr [8 x i32], [8x i32]* %11, i32 0, i32 %71
%73 = load i32, i32* %72
%74 = add i32 %68,%73
call void @putint(i32 %74)
ret i32 0
}
